{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"parent",
				"parent_obj"
			],
			[
				"mod",
				"model_type"
			],
			[
				"model",
				"model_type"
			],
			[
				"pare",
				"parent_obj"
			],
			[
				"mode",
				"model_type"
			],
			[
				"us",
				"get_user_model"
			],
			[
				"valida",
				"validated_data"
			],
			[
				"object",
				"objects"
			],
			[
				"conte",
				"content_type"
			],
			[
				"contet",
				"content"
			],
			[
				"m",
				"model_type"
			],
			[
				"COnt",
				"content_type"
			],
			[
				"Co",
				"CommentCreateSerializer"
			],
			[
				"parent_",
				"parent_qs"
			],
			[
				"pa",
				"parent"
			],
			[
				"COm",
				"CommentSerializer"
			],
			[
				"Comm",
				"Comment"
			],
			[
				"se",
				"SerializerMethodField"
			],
			[
				"Comments",
				"comments"
			],
			[
				"queryset",
				"queryset_list"
			],
			[
				"IsA",
				"IsAdminUser"
			],
			[
				"re",
				"rest_framework"
			],
			[
				"PostCre",
				"PostCreateUpdateAPIView"
			],
			[
				"PO",
				"PostDetailSerializer"
			],
			[
				"pos",
				"PostSerializer"
			],
			[
				"read",
				"read_time_min"
			],
			[
				"rea",
				"read_time_minutes"
			],
			[
				"count",
				"count_words"
			],
			[
				"html",
				"html_string"
			],
			[
				"cont",
				"content_type"
			],
			[
				"con",
				"content_object"
			],
			[
				"Commen",
				"CommentForm"
			],
			[
				"H",
				"HttpResponseRedirect"
			],
			[
				"Ht",
				"HttpResponseRedirect"
			],
			[
				"obje",
				"objects"
			],
			[
				"comm",
				"CommentManager"
			],
			[
				"Com",
				"Comment"
			],
			[
				"cle",
				"clean_parent_id"
			],
			[
				"obj",
				"obj_id"
			],
			[
				"COmm",
				"CommentManager"
			],
			[
				"content",
				"content_type"
			],
			[
				"co",
				"comments"
			],
			[
				"conten",
				"content_type"
			],
			[
				"mar",
				"margin-left"
			],
			[
				"mark",
				"markedContent"
			],
			[
				"titl",
				"titleItem"
			],
			[
				"tit",
				"titleValue"
			],
			[
				"use",
				"username"
			],
			[
				"get_o",
				"get_object"
			],
			[
				"usr",
				"username"
			],
			[
				"get_obj",
				"get_object_or_404"
			],
			[
				"sale",
				"sale_price"
			],
			[
				"ratin",
				"rating_obj"
			],
			[
				"prod",
				"product"
			],
			[
				"product",
				"productrating_set"
			],
			[
				"rai",
				"ratings"
			],
			[
				"rat",
				"ratings"
			],
			[
				"pro",
				"product_obj"
			],
			[
				"ra",
				"rating_obj"
			],
			[
				"ob",
				"objects"
			],
			[
				"Pr",
				"ProductRating"
			],
			[
				"Mu",
				"MultipleObjectsReturned"
			],
			[
				"Pro",
				"ProductRating"
			],
			[
				"inpu",
				"inputValue"
			],
			[
				"tra",
				"transactions_today"
			],
			[
				"today",
				"today_max"
			],
			[
				"date",
				"datetime"
			],
			[
				"get_",
				"get_transactions"
			],
			[
				"get",
				"get_transactions"
			],
			[
				"is",
				"is_active"
			],
			[
				"Sell",
				"SellerAccount"
			],
			[
				"dow",
				"download_link"
			],
			[
				"w",
				"wrap"
			],
			[
				"http",
				"Http404"
			],
			[
				"produ",
				"product_obj"
			],
			[
				"fun",
				"function"
			],
			[
				"wid",
				"width"
			],
			[
				"ran",
				"random_products"
			],
			[
				"po",
				"products"
			],
			[
				"to",
				"top_tags_idless"
			],
			[
				"Tag",
				"TagView"
			],
			[
				"new",
				"new_view"
			],
			[
				"Prod",
				"ProductDetailView"
			],
			[
				"ana",
				"analytic_obj"
			],
			[
				"an",
				"analytic_obj"
			],
			[
				"tag",
				"tag_set"
			],
			[
				"tags",
				"tags_list"
			],
			[
				"in",
				"initial"
			],
			[
				"hd_",
				"hd_max"
			],
			[
				"hd",
				"hd_created"
			],
			[
				"temp",
				"temp_loc"
			],
			[
				"thu",
				"thumb_file"
			],
			[
				"Tu",
				"Thumbnail"
			],
			[
				"qu",
				"query"
			],
			[
				"mim",
				"mimetype"
			],
			[
				"file",
				"filepath"
			],
			[
				"Htt",
				"HttpResponse"
			],
			[
				"url",
				"urlpatterns"
			],
			[
				"des",
				"decorators"
			],
			[
				"form",
				"form_valid"
			],
			[
				"slug",
				"slugify"
			],
			[
				"sug",
				"slugify"
			],
			[
				"Upda",
				"UpdateView"
			],
			[
				"Crea",
				"CreateView"
			],
			[
				"mu",
				"MultiSlugMixin"
			],
			[
				"Product",
				"ProductDetailView"
			],
			[
				"ht",
				"Http404"
			],
			[
				"de",
				"description"
			],
			[
				"option",
				"option1"
			],
			[
				"var",
				"variation"
			],
			[
				"cat",
				"categories"
			],
			[
				"cateo",
				"category"
			],
			[
				"order",
				"order_id"
			],
			[
				"cus",
				"customer_id〔variable〕"
			],
			[
				"user_",
				"user_check_id"
			],
			[
				"user",
				"user_checkout〔variable〕"
			],
			[
				"custo",
				"customer_id"
			],
			[
				"User",
				"UserCheckout〔module〕"
			],
			[
				"user_check",
				"user_checkout_id"
			],
			[
				"bra",
				"braintree_id"
			],
			[
				"dec",
				"decorators〔module〕"
			],
			[
				"Or",
				"OrderList〔class〕"
			],
			[
				"bill",
				"billing_address〔variable〕"
			],
			[
				"bi",
				"billing_address"
			],
			[
				"st",
				"street〔variable〕"
			],
			[
				"s",
				"s_address"
			],
			[
				"Http",
				"HttpResponseRedirect〔class〕"
			],
			[
				"b",
				"b_address"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/comments/api/urls.py",
			"settings":
			{
				"buffer_size": 365,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/comments/api/views.py",
			"settings":
			{
				"buffer_size": 2126,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "from django.contrib.contenttypes.models import ContentType\nfrom django.contrib.auth import get_user_model\nfrom rest_framework.serializers import (\n\tModelSerializer,\n\tHyperlinkedIdentityField,\n\tSerializerMethodField,\n\tValidationError\n\t)\n\nfrom comments.models import Comment\nUser = get_user_model()\ndef create_comment_serializer(model_type='post', slug= None,parent_id = None,user=None):\n\tclass CommentCreateSerializer(ModelSerializer):\n\t\tclass meta:\n\t\t\tmodel = Comment\n\t\t\tfields = [\n\t\t\t\t'id', \n\t\t\t\t'parent',\n\t\t\t\t'content',\n\t\t\t\t'timestamp', \n\t\t\t]\n\t\tdef __init__(self,*args,**kwargs):\n\t\t\tself.model_type = model_type\n\t\t\tself.slug = slug\n\t\t\tself.parent_obj = None\n\t\t\tif self.parent_id:\n\t\t\t\tparent_qs = Comment.objects.filter(id= parent_id)\n\t\t\t\tif parent_qs.exists() and parent_qs.count()  == 1:\n\t\t\t\t\tself.parent_obj = parent_qs.first()\n\t\t\treturn super(CommentCreateSerializer,self).__init__(*args,**kwargs)\n\n\t\tdef validate(self,data):\n\t\t\tmodel_type = self.model_type\n\t\t\tmodel_qs = ContentType.objects.filter(model= model_type)\n\t\t\tif not model_qs.exists() or model_qs.count() !=1:\n\t\t\t\traise ValidationError(\"This is not a valid content type\")\n\t\t\tSomeModel = model_qs.first().model_class()\n\t\t\tobj_qs = SomeModel.objects.filter(slug = self.slug)\n\t\t\tif not obj_qs.exists() or obj_qs.count() !=1:\n\t\t\t\traise ValidationError(\"This is not a valid slug for this Content type\")\n\t\t\treturn data\n\n\t\tdef create(self, validated_data):\n\t\t\tcontent = validated_data.get(\"content\")\n\t\t\tuser = User.objects.all().first()\n\t\t\tmodel_type = self.model_type\n\t\t\tslug = self.slug\n\t\t\tparent_obj = self.parent_obj\n\t\t\tcomment = Comment.objects.create_by_model_type(\n\t\t\t\tmodel_type,slug,content,user,\n\t\t\t\tparent_obj = parent_obj,\n\t\t\t\t)\n\t\t\treturn comment\n\n\treturn CommentCreateSerializer\n\nclass CommentSerializer(ModelSerializer):\n\treply_count = SerializerMethodField()\n\tclass Meta:\n\t\tmodel = Comment\n\t\tfields = [\n\t\t\t'id', \n\t\t\t'content_type',\n\t\t\t'object_id',\n\t\t\t'parent',\n\t\t\t'content',\n\t\t\t'reply_count',\n\t\t\t'timestamp', \n\t\t]\n\tdef get_reply_count(self,obj):\n\t\tif obj.is_parent:\n\t\t\treturn obj.children().count()\n\t\treturn 0 \n\nclass CommentChildSerializer(ModelSerializer):\n\tclass Meta:\n\t\tmodel = Comment\n\t\tfields = [\n\t\t\t'id', \n\t\t\t'content',\n\t\t\t'timestamp',\n\n\t\t]\n\nclass CommentDetailSerializer(ModelSerializer):\n\n\treply_count = SerializerMethodField()\n\treplies = SerializerMethodField()\n\tclass Meta:\n\t\tmodel = Comment\n\t\tfields = [\n\t\t\t'id', \n\t\t\t'content_type',\n\t\t\t'object_id',\n\t\t\t'content',\n\t\t\t'replies',\n\t\t\t'reply_count',\n\t\t\t'timestamp',\n\t\t]\n\n\tdef get_replies(self,obj):\n\t\tif obj.is_parent:\n\t\t\treturn CommentChildSerializer(obj.children(),many=True).data\n\t\treturn None\n\n\tdef get_reply_count(self,obj):\n\t\tif obj.is_parent:\n\t\t\treturn obj.children().count()\n\t\treturn 0 ",
			"file": "src/comments/api/serializer.py",
			"file_size": 2680,
			"file_write_time": 131485997311081851,
			"settings":
			{
				"buffer_size": 2725,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "from __future__ import unicode_literals\n\nfrom django.conf import settings\nfrom django.contrib.contenttypes.fields import GenericForeignKey\nfrom django.contrib.contenttypes.models import ContentType\nfrom django.core.urlresolvers import reverse\nfrom django.db import models\n\n\nclass CommentManager(models.Manager):\n    def all(self):\n        qs = super(CommentManager, self).filter(parent=None)\n        return qs\n\n    def filter_by_instance(self, instance):\n        content_type = ContentType.objects.get_for_model(instance.__class__)\n        obj_id = instance.id\n        qs = super(CommentManager, self).filter(content_type=content_type, object_id= obj_id).filter(parent=None)\n        return qs\n    def create_by_model_type(self,model_type,slug,content,user,parent_obj=None):\n        model_qs = ContentType.objects.filter(model= model_type)\n        if model_qs.exists():\n            SomeModel = model_qs.first().model_class()\n            obj_qs = SomeModel.objects.filter(slug = self.slug)\n            if obj_qs.exists() and obj_qs.count() ==1:\n                instance = self.model()\n                instance.content = content\n                instance.user = user\n                instance.content_type = model_qs.first()\n                instance.object_id = obj_qs.first().id\n                if parent_obj:\n                    instance.parent = parent_obj\n                instance.save()\n                return instance\n        return None\nclass Comment(models.Model):\n    user        = models.ForeignKey(settings.AUTH_USER_MODEL, default=1)\n    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)\n    object_id = models.PositiveIntegerField()\n    content_object = GenericForeignKey('content_type', 'object_id')\n    parent      = models.ForeignKey(\"self\", null=True, blank=True)\n\n    content     = models.TextField()\n    timestamp   = models.DateTimeField(auto_now_add=True)\n\n    objects = CommentManager()\n\n    class Meta:\n        ordering = ['-timestamp']\n\n\n    def __unicode__(self):  \n        return str(self.user.username)\n\n    def __str__(self):\n        return str(self.user.username)\n\n    def get_absolute_url(self):\n        return reverse(\"comments:thread\", kwargs={\"id\": self.id})\n\n    def get_delete_url(self):\n        return reverse(\"comments:delete\", kwargs={\"id\": self.id})\n        \n    def children(self): #replies\n        return Comment.objects.filter(parent=self)\n\n    @property\n    def is_parent(self):\n        if self.parent is not None:\n            return False\n        return True\n\n\n\n",
			"file": "src/comments/models.py",
			"file_size": 1858,
			"file_write_time": 131485989196824064,
			"settings":
			{
				"buffer_size": 2523,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/posts/api/serializers.py",
			"settings":
			{
				"buffer_size": 1457,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 287.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mar",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markd",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markdown",
				"Markdown Preview: Preview in Browser"
			],
			[
				"",
				"Convert Case: Lower Case"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 575.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"PYTHON",
			"CHEF.PY"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Hp/Anaconda3/Scripts/blog-api",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/blog",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/comments",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/posts",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/posts/api"
	],
	"file_history":
	[
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/blog/urls.py",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/posts/api/views.py",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/posts/api/pagination.py",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/posts/api/urls.py",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/posts/api/permissions.py",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/comments/api/urls.py",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/comments/api/serializer.py",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/posts/api/serializers.py",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/comments/api/__init__.py",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/posts/api/__init__.py",
		"/C/Users/Hp/Anaconda3/Scripts/blog-api/src/blog/settings.py",
		"/Users/cfe/Desktop/blog/src/posts/models.py",
		"/Users/cfe/Desktop/blog/src/posts/utils.py",
		"/Users/cfe/Desktop/blog/src/posts/views.py",
		"/Users/cfe/Desktop/blog/src/comments/forms.py",
		"/Users/cfe/Desktop/blog/src/blog/urls.py",
		"/Users/cfe/Desktop/blog/src/templates/comment_thread.html",
		"/Users/cfe/Desktop/blog/src/templates/post_detail.html",
		"/Users/cfe/Desktop/blog/src/comments/views.py",
		"/Users/cfe/Desktop/blog/src/comments/urls.py",
		"/Users/cfe/Desktop/blog/src/comments/models.py",
		"/Users/cfe/Desktop/blog/README.md",
		"/Users/cfe/Desktop/blog/src/posts/migrations/0004_post_read_time.py",
		"/Users/cfe/Desktop/blog/src/templates/base.html",
		"/Users/cfe/Desktop/blog/src/templates/comments/comment_thread.html",
		"/Users/cfe/Desktop/blog/src/static/css/base.css",
		"/Users/cfe/Desktop/blog/src/posts/urls.py",
		"/Users/cfe/Desktop/blog/src/comments/migrations/0002_comment_parent.py",
		"/Users/cfe/Desktop/blog/src/posts/forms.py",
		"/Users/cfe/Desktop/blog/src/templates/post_list.html",
		"/Users/cfe/Desktop/blog/src/blog/settings.py",
		"/Users/cfe/Desktop/blog/src/comments/admin.py",
		"/Users/cfe/Desktop/blog/static_cdn/css/base.css",
		"/Users/cfe/Desktop/blog/src/templates/post_form.html",
		"/Users/jmitch/Desktop/blog/src/blog/urls.py",
		"/Users/jmitch/Desktop/blog/src/blog/settings.py",
		"/Users/jmitch/Desktop/blog/src/db.sqlite3",
		"/Users/jmitch/Desktop/blog/src/blog/wsgi.py",
		"/Users/jmitch/Desktop/blog/README.md",
		"/Users/jmitch/Desktop/dm/src/products/views.py",
		"/Users/jmitch/Desktop/dm/src/templates/form.html",
		"/Users/jmitch/Desktop/dm/src/templates/form_include.html",
		"/Users/jmitch/Desktop/dm/src/sellers/forms.py",
		"/Users/jmitch/Desktop/dm/src/templates/base.html",
		"/Users/jmitch/Desktop/dm/src/digitalmarket/mixins.py",
		"/Users/jmitch/Desktop/dm/src/templates/products/product_list_snippet.html",
		"/Users/jmitch/Desktop/dm/src/templates/products/library_list.html",
		"/Users/jmitch/Desktop/dm/src/products/urls.py",
		"/Users/jmitch/Desktop/dm/src/templates/products/product_detail.html",
		"/Users/jmitch/Desktop/dm/src/templates/products/product_list.html",
		"/Users/jmitch/Desktop/dm/src/products/tests.py",
		"/Users/jmitch/Desktop/dm/src/products/admin.py",
		"/Users/jmitch/Desktop/dm/src/sellers/models.py",
		"/Users/jmitch/Desktop/dm/src/products/models.py",
		"/Users/jmitch/Desktop/dm/src/templates/dashboard/view.html",
		"/Users/jmitch/Desktop/dm/src/dashboard/views.py",
		"/Users/jmitch/Desktop/dm/README.md",
		"/Users/jmitch/Desktop/dm/src/digitalmarket/urls.py",
		"/Users/jmitch/Desktop/dm/src/sellers/views.py",
		"/Users/jmitch/Desktop/dm/src/checkout/views.py",
		"/Users/jmitch/Desktop/dm.md",
		"/Users/jmitch/Desktop/dm/src/digitalmarket/settings.py",
		"/Users/jmitch/Desktop/dm/LICENSE",
		"/Users/jmitch/Desktop/dm/src/templates/sellers/dashboard.html",
		"/Users/jmitch/Desktop/dm/src/sellers/mixins.py",
		"/Users/jmitch/Desktop/dm/src/analytics/models.py",
		"/Users/jmitch/Desktop/dm/src/products/mixins.py",
		"/Users/jmitch/Desktop/dm/src/templates/sellers/product_list_view.html",
		"/Users/jmitch/Desktop/dm/src/billing/models.py",
		"/Users/jmitch/Desktop/dm/src/sellers/urls.py",
		"/Users/jmitch/Desktop/dm/src/templates/sellers/transaction_list.html",
		"/Users/jmitch/Desktop/dm/src/templates/sellers/transaction_list_view.html",
		"/Users/jmitch/Desktop/dm/src/products_backup.json",
		"/Users/jmitch/Desktop/dm/src/billing/admin.py",
		"/Users/jmitch/Desktop/dm/src/sellers/admin.py",
		"/Users/jmitch/Desktop/dm/src/products/forms.py",
		"/Users/jmitch/Desktop/dm/src/templates/checkout/test.html",
		"/Users/jmitch/Desktop/dm/src/digitalmarket/decorators.py",
		"/Users/jmitch/Desktop/dm/src/static/js/django.csrf.js",
		"/Users/jmitch/Desktop/dm/src/templates/tags/tag_detail.html",
		"/Users/jmitch/Desktop/dm/src/tags/views.py",
		"/Users/jmitch/Desktop/dm/src/CRUD.md",
		"/Users/jmitch/Desktop/dm/src/templates/dashboard.html",
		"/Users/jmitch/Desktop/dm/src/templates/list_view.html",
		"/Users/jmitch/Desktop/dm/src/analytics/admin.py",
		"/Users/jmitch/Desktop/dm/src/products/templatetags/get_thumbnail.py",
		"/Users/jmitch/Desktop/dm/src/tags/models.py",
		"/Users/jmitch/Desktop/dm/src/tags/admin.py",
		"/Users/jmitch/Desktop/dm/src/tags/urls.py",
		"/Users/jmitch/Desktop/dm/src/templates/tags/tag_list.html",
		"/Users/jmitch/Desktop/dm/src/products/templatetags/__init__.py",
		"/Users/jmitch/Desktop/dm/static_cdn/protected/asdfasdf-22/Beach.jpg",
		"/Users/jmitch/Desktop/dm/static_cdn/protected/asdfasdf-22/Beach_UqwGJez.jpg",
		"/Users/jmitch/Desktop/dm/src/static/css/base.css",
		"/Users/jmitch/Desktop/dm/static_cdn/media/jmitch/base.css",
		"/Users/jmitch/Desktop/dm/static_cdn/protected/23/Beach.jpg",
		"/Users/jmitch/Desktop/dm/src/templates/update_view.html",
		"/Users/jmitch/Desktop/dm/src/templates/create_view.html",
		"/Users/jmitch/Desktop/dm/src/templates/detail_view.html",
		"/Users/jmitch/Desktop/dm/src/products/migrations/0008_auto_20151117_2131.py",
		"/Users/jmitch/Desktop/dm/.gitignore",
		"/Users/jmitch/Desktop/dm/src/products/migrations/0003_product_description.py",
		"/Users/jmitch/Desktop/dm/src/products/migrations/0001_initial.py",
		"/Users/jmitch/Desktop/dm/src/products/migrations/0002_auto_20151114_2119.py",
		"/Users/jmitch/Desktop/Guides/all/install_postgresql_windows.md",
		"/Users/jmitch/Desktop/Guides/all/postgresql_and_django.md",
		"/Users/jmitch/Desktop/Guides/README.md",
		"/Users/jmitch/Desktop/newenv/newproject/newproject/settings.py",
		"/Users/jmitch/Desktop/Guides/all/install_postgresql_mac_linux.MD",
		"/Users/jmitch/Desktop/postgres.MD",
		"/Users/jmitch/Desktop/Overview.md",
		"/Users/jmitch/Desktop/ecommerce-2/src/carts/models.py",
		"/Users/jmitch/Desktop/ecommerce-2/src/products/templates/products/products.html",
		"/Users/jmitch/Desktop/ecommerce-2/src/requirements.txt",
		"/Users/jmitch/Desktop/ecommerce-2/src/orders/templates/orders/order_list.html",
		"/Users/jmitch/Desktop/ecommerce-2/src/orders/templates/orders/order_detail.html",
		"/Users/jmitch/Desktop/ecommerce-2/src/orders/templates/orders/order_summary_short.html",
		"/Users/jmitch/Desktop/ecommerce-2/src/carts/views.py",
		"/Users/jmitch/Desktop/ecommerce-2/src/ecommerce2/settings/local.py",
		"/Users/jmitch/Desktop/ecommerce-2/src/carts/templates/carts/checkout_view.html",
		"/Users/jmitch/Desktop/ecommerce-2/src/templates/base.html",
		"/Users/jmitch/Desktop/ecommerce-2/src/templates/javascript.html",
		"/Users/jmitch/Desktop/ecommerce-2/src/orders/models.py",
		"/Users/jmitch/Desktop/ecommerce-2/src/orders/views.py",
		"/Users/jmitch/Desktop/ecommerce-2/src/orders/mixins.py",
		"/Users/jmitch/Desktop/ecommerce-2/src/orders/forms.py",
		"/Users/jmitch/Desktop/ecommerce-2/src/ecommerce2/urls.py",
		"/Users/jmitch/Desktop/ecommerce-2/src/carts/templates/carts/view.html"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/Users/jmitch/Desktop/ecommerce-2/src",
			"/Users/jmitch/Dropbox/projects/kpj",
			"/Users/jmitch/Dropbox/projects/kpj/kpj",
			"/Users/jmitch/Dropbox/projects/",
			"/Users/jmitch/Dropbox/projects/kpj/kpj",
			"<open files>",
			"/Users/jmitch/Dropbox/projects/kpj/kpj",
			"/Users/jmitch/Dropbox/projects/kpj",
			"/Users/jmitch/Dropbox/cfe/src"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"get_transactions",
			"ProductUpdateView",
			"delete all",
			"jmitch-#",
			"AddressSelectFormView",
			"order_address",
			"\"",
			"item_it",
			"trydjango18",
			"questions_notification",
			"app.task",
			"needs_rep",
			"sendgrid",
			"celerybeat-schedule.db",
			"get_next_lecture",
			"lecture_quiz_result",
			"quiz",
			"url",
			"reverse",
			"module-box",
			"slug",
			"lang",
			"send_mail",
			"get_user",
			"ppe_4",
			"as_view",
			"\"join\"",
			"saftey",
			"Saftey Trianing i",
			"Training on new pesticides prior to first use",
			"transaction",
			"render_to",
			"render_to_pdf",
			"render_to",
			"DeleteView",
			"welcome_",
			"welcome",
			"all.html",
			"$.ajax",
			"ajax",
			"wistia",
			"upload",
			"review",
			"review now",
			"review_chemicals",
			"lectures_admin",
			"upload_bulk",
			"ChemicalsViewAdmin",
			"filter(active=F",
			"active",
			"LectureQuizAdminView",
			"formview",
			"$.ajax",
			"ajax",
			"clean",
			"keep",
			"questionanswer",
			"initial",
			"get_lecture",
			"slug",
			"LectureDetailView",
			"get_lecture",
			"get_next_lecture",
			"lecture_quiz",
			"edit_lecture",
			"single_lecture",
			"single",
			"form.as",
			"question.as",
			"question",
			"method",
			"csv",
			"ceu",
			"login",
			"easy",
			"grand",
			"pricing",
			"cost",
			"paginator",
			"question",
			"lecturequestion",
			"question",
			"next",
			"take_quiz",
			"after ",
			"href",
			"take_quiz",
			"start",
			"Coding",
			"Coding For Entrepreneurs",
			"Coding for Entrepreneurs",
			"results",
			"cleaned_email",
			"class=\"fa fa-check\"",
			"You are already logged in",
			"pricing",
			"login",
			"PasswordResetForm",
			"team",
			"team_id",
			"user_logged_in",
			"transcript",
			"template",
			"modal",
			"def __unicode__(self)",
			"def__unicode__(self)",
			"check",
			"chain",
			"action",
			"get_model",
			"team",
			"DEFAULT_FROM_EMAIL",
			"PasswordResetForm",
			"activate",
			"settings",
			"request",
			"reset",
			"checmicals",
			"activity",
			"Pag",
			"quiz",
			"middle",
			"user_logged_in",
			"create",
			"create_user",
			"MemberCreateForm",
			"Member",
			"member"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"jmitch=#",
			"'",
			"ecommerce2",
			"Control Guidance Solutions, LLC",
			"class=\"fa fa-check fa-2x\"",
			"img/apple-touch-icon-152.png",
			"{})",
			"render(request,",
			"render(",
			")",
			"render(request,",
			"Coding For Entrepreneurs",
			"CodingForEntrepreneurs.com",
			"Coding For Entrepreneurs",
			"CodingForEntrepreneurs.com"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/comments/api/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 365,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								237
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/comments/api/views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2126,
						"regions":
						{
						},
						"selection":
						[
							[
								949,
								949
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 625.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/comments/api/serializer.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2725,
						"regions":
						{
						},
						"selection":
						[
							[
								383,
								383
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 31.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/comments/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2523,
						"regions":
						{
						},
						"selection":
						[
							[
								727,
								755
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 223.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/posts/api/serializers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1457,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 136.0
	},
	"pinned_build_system": "",
	"project": "blog.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"email",
				"templates/team/email_instructions.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 267.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
